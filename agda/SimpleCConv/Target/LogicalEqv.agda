
module Target.LogicalEqv where

open import Lib
open import Target.Syntax

infix 4 _โ_
_โ_ : โ {A} โ Tm โ A โ Tm โ A โ Set
_โ_ {๐น}      t u = t ~ u
_โ_ {Top}    t u = โค
_โ_ {A * B}  t u = (ฯโ t โ ฯโ u) ร (ฯโ t โ ฯโ u)
_โ_ {A โโบ B} t u = โ {a a'} โ a โ a' โ appโบ t a โ appโบ u a'
_โ_ {A โ B}  t u = โ {a a'} โ a โ a' โ app t a โ app u a'

infix 6 _โโปยน
_โโปยน : โ {A}{t t' : Tm โ A} โ t โ t' โ t' โ t
_โโปยน {๐น}      p       = p ~โปยน
_โโปยน {Top}    p       = p
_โโปยน {A * B}  (p , q) = (p โโปยน) , (q โโปยน)
_โโปยน {A โ B}  p       = ฮป q โ p (q โโปยน) โโปยน
_โโปยน {A โโบ B} p       = ฮป q โ p (q โโปยน) โโปยน

infixr 4 _โโพ_
_โโพ_ : โ {A}{t t' t'' : Tm โ A} โ t โ t' โ t' โ t'' โ t โ t''
_โโพ_ {๐น}     p q = p ~โพ q
_โโพ_ {A โ B} p q = ฮป r โ p r โโพ q (r โโปยน โโพ r)
_โโพ_ {A โโบ B} p q = ฮป r โ p r โโพ q (r โโปยน โโพ r)
_โโพ_ {Top} p q = p
_โโพ_ {A * B} (p , q) (r , s) = (p โโพ r) , (q โโพ s)
